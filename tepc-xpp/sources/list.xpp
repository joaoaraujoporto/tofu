
class list {
	
	int index;
	int maxsize;
	int elements[10];

	constructor(int maxsize) {
		elements = new int[maxsize];
		index = -1;
	}	

	int pushLast(int e) {
		if (index + 1 == maxsize) {
			return -1;
		} 
		
		index = index + 1;
		elements[index] = e;
		return e;
	}
	
	int push(int i, int e) {
		if (index + 1 == maxsize) {
			return -1;
		}
		
		int j;
		for (j = index; j >= i; j = j - 1) {
			elements[j + 1] = elements[j];
		}
		
		index = index + 1;
		elements[j] = e;
		return e;
	}
	
	int pushFirst(int e) {
		if (index + 1 == maxsize) {
			return -1;
		} 
		
		int i;
		for (i = index; i >= 0; i = i - 1) {
			elements[i + 1] = elements[i];
		}
		
		index = index + 1;
		elements[0] = e;
		return e;
	}
	
	int pop() {
		if (index + 1 == 0) {
			return -1;
		}
	
		int aux;
		aux = elements[index];
		index = index - 1;
		return aux;
	}
	
	int top() {
		if (index + 1 == 0) {
			return -1;
		}
		
		return elements[index];
	} 
	
	int get(int i) {
		if (index + 1 == 0) {
			return -1;
		}
		
		return elements[i];
	}
	
	int pop(int i) {
		if (index + 1 == 0) {
			return -1;
		}
		
		int aux;
		aux = elements[i];
		
		int j;
		for (j = index; i >= i; j = j - 1) {
			elements[j - 1] = elements[i];
		}
		
		index = index - 1;
		return aux;
	}
	
	int size() {
		return index + 1;
	}
	
}